{{- if not .Values.onlyDeployCrds }}

{{- $altNames := list ( printf "%s.%s" .Release.Name .Release.Namespace ) ( printf "%s.%s.svc" .Release.Name .Release.Namespace ) ( printf "%s.%s.svc.cluster.local" .Release.Name .Release.Namespace ) -}}
{{- $ca := genCA "enonic-operator-ca" 3650 -}}
{{- $cert := genSignedCert .Release.Name nil $altNames 3650 $ca -}}

---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ .Release.Name }}-tls
  namespace: {{ .Release.Namespace }}
data:
  ca.crt: {{ $ca.Cert | b64enc }}
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1.operator.enonic.cloud
spec:
  group: operator.enonic.cloud
  groupPriorityMinimum: 1000
  versionPriority: 15
  caBundle: {{ $ca.Cert | b64enc }}
  service:
    name: {{ .Release.Name }}
    namespace: {{ .Release.Namespace }}
  version: v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ .Release.Name }}
webhooks:
  - name: v1.operator.enonic.cloud
    rules:
      - apiGroups: ["enonic.cloud"]
        operations: ["*"]
        apiVersions: ["v1"]
        resources: ["xp7deployments", "xp7apps", "xp7configs", "domains"]
        scope: "*"
      - apiGroups: ["networking.k8s.io"]
        operations: ["*"]
        apiVersions: ["v1"]
        resources: ["ingresses"]
        scope: "*"
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    sideEffects: None
    timeoutSeconds: 5
    clientConfig:
      caBundle: {{ $ca.Cert | b64enc }}
      service:
        name: kubernetes
        namespace: default
        path: /apis/operator.enonic.cloud/v1/validations
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ .Release.Name }}
webhooks:
  - name: v1.operator.enonic.cloud
    rules:
      - apiGroups: ["enonic.cloud"]
        operations: ["*"]
        apiVersions: ["v1"]
        resources: ["xp7deployments", "xp7apps", "xp7configs", "domains"]
        scope: "*"
      - apiGroups: ["networking.k8s.io"]
        operations: ["*"]
        apiVersions: ["v1"]
        resources: ["ingresses"]
        scope: "*"
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    sideEffects: None
    timeoutSeconds: 5
    clientConfig:
      caBundle: {{ $ca.Cert | b64enc }}
      service:
        name: kubernetes
        namespace: default
        path: /apis/operator.enonic.cloud/v1/mutations
---
{{- end }}
