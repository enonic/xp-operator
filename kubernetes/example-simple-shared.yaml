# Create a namespace
apiVersion: v1
kind: Namespace
metadata:
  name: my-namespace
  annotations:
    # Delete this namespace it the deployment is deleted
    enonic.cloud/remove.with.xp7deployment: my-deployment
---
# Create deployment in the namespace
apiVersion: enonic.cloud/v1
kind: Xp7Deployment
metadata:
  name: my-deployment
  namespace: my-namespace
spec:
  enabled: true
  xpVersion: 7.13.2

  # Preinstall snapshotter on all nodes
  nodesPreinstalledApps:
    - name: snapshotter
      url: https://repo.enonic.com/public/com/enonic/app/snapshotter/3.0.2/snapshotter-3.0.2.jar

  nodesSharedVolumes:
    - name: shared
      size: 1Gi
      class: nfs

  # Create volumes shared by all nodes in this deployment
  nodesSharedDisks:
    - name: blobstore
      volume: shared

    - name: snapshots
      volume: shared

    - name: export # Dumps and other data
      size: 1Gi
      class: nfs

  # Create one node
  nodeGroups:
    - name: main
      replicas: 1

      env:
        - name: XP_OPTS
          value: "-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"

      data: true
      master: true

      initContainers:
        - image: vbonik/image:tag7
          name: my-sidecar-1
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "cp -r /export/* /deploytest"
          mounts:
            - name: deploy
              mountPath: /deploy
      sidecars:
        - image: vbonik/image:tag7
          name: my-sidecar-2
          command: []
          args: []
          mounts:
            - name: deploy
              mountPath: /deploy
      resources:
        cpu: "1"
        memory: 1Gi
        dirs:
          - name: deploy
            size: 100Mi
        volumes:
          - name: inner
            size: 1Gi
#            class: nfs

        # Volumes private to the node
        disks:
#          - name: deploy # Apps installed in the deploy folder
#            volume: deploy
          - name: index # Node ES index
            volume: inner
          - name: work # Node cache
            volume: inner
---
# Install content studio
apiVersion: enonic.cloud/v1
kind: Xp7App
metadata:
  name: contentstudio
  namespace: my-namespace
spec:
  url: https://repo.enonic.com/public/com/enonic/app/contentstudio/4.5.2/contentstudio-4.5.2.jar
  sha512: e5662edb8757ceb6f085d1a8d85abf965c0f45a98acbc767ef31f4e8d860fc88cc995aa7cfcb1167f356c3e261129524f3c38de93cdc08baca95e51943a99365
---
# Disable management of apps through XP admin
apiVersion: enonic.cloud/v1
kind: Xp7Config
metadata:
  name: my-config
  namespace: my-namespace
spec:
  nodeGroup: all
  file: com.my-app.cfg
  data: |
    my = config
---
# Expose XP through an ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-domain-com
  namespace: my-namespace
  annotations:
    enonic.cloud/xp7.vhost.mapping.my-mapping-site.source: /
    enonic.cloud/xp7.vhost.mapping.my-mapping-site.target: /site/default/master/homepage

    enonic.cloud/xp7.vhost.mapping.my-mapping-admin.source: /admin
    enonic.cloud/xp7.vhost.mapping.my-mapping-admin.target: /admin
    enonic.cloud/xp7.vhost.mapping.my-mapping-admin.idproviders: system
spec:
  rules:
    - host: my-domain.com
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: main
                port:
                  number: 8080

          - path: /admin
            pathType: ImplementationSpecific
            backend:
              service:
                name: main
                port:
                  number: 8080
