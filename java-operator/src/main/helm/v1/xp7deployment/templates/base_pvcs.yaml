# Setup shared disks persistent claims
{{- range $disk := $.Values.deployment.spec.nodesSharedDisks }}
  {{- if not $disk.volume }}
    {{- template "persistentVolumeClaim" (dict "claim" $disk "Values" $.Values) }}
  {{- end }}
{{- end }}

# Setup shared volumes persistent claims
{{- range $volume := $.Values.deployment.spec.nodesSharedVolumes }}
  {{- template "persistentVolumeClaim" (dict "claim" $volume "Values" $.Values) }}
{{- end }}


{{- define "persistentVolumeClaim" -}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .claim.name }}
  namespace: {{ .Values.deployment.namespace }}
  annotations:
    {{ .Values.annotationKeys.applyPriority }}: "10"
      {{- with .Values.storage.shared.annotations }}
      {{- toYaml . | nindent 4 }}
      {{- end }}
  labels:
    {{ .Values.labelKeys.managed }}: true
    {{- with .Values.defaultLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  ownerReferences:
    {{- with .Values.ownerReferences }}
      {{- toYaml . | nindent 4 }}
      {{- end }}
spec:
  storageClassName: {{ .claim.class | default .Values.storage.shared.storageClassName }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .claim.size }}
{{- end }}



