---
allNodesKey: "all"
annotationKeys:
  applyPriority: "enonic.applyPriority"
  ingressCertManage: "enonic.cloud/ingress.cert.manage"
  neverOverwrite: "enonic.neverOverwrite"
  removeWithDeployment: "enonic.cloud/remove.with.xp7deployment"
  vhostMapping: "enonic.cloud/xp7.vhost.mapping."
clusterId: "44ddc40b-266c-4c99-b094-e758328fc6ba"
defaultLabels:
  cloud: "mycloud"
  environment: "myenv"
  service: "myservice"
  solution: "mysolution"
deployment:
  clustered: false
  hasDedicatedFrontendNodes: false
  name: "mycloud-mysolution-myenv-myservice"
  namespace: "mycloud-mysolution-myenv-myservice"
  spec:
    enabled: true
    xpVersion: "7.13.0"
    nodesSharedVolumes: []
    nodesSharedDisks:
    - name: "blobstore"
      size: "2Gi"
    - name: "snapshots"
      size: "3Gi"
    nodeGroups:
    - name: "fisk"
      data: true
      master: true
      replicas: 1
      initContainers:
        - image: busybox
          name: my-sidecar-1
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "cp -r /export/* /deploy"
          mounts:
            - name: deploy
              mountPath: /deploy
      sidecars:
        - image: otherbox
          name: my-sidecar-2
          command: []
          args: []
          mounts:
            - name: deploy
              mountPath: /deploy
      env:
      - name: "XP_OPTS"
        value: " -Xms154m -Xmx154m -XX:-HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/enonic-xp/home/data/oom.hprof\
          \ -Dhazelcast.shutdownhook.policy=GRACEFUL -Dhazelcast.graceful.shutdown.max.wait=600"
      resources:
        cpu: "1"
        memory: "512Mi"
        dirs:
        - name: "deploy"
          size: "100Mi"
        volumes: []
        disks:
        - name: "export"
          size: "234Mi"
        - name: "index"
          size: "200Mi"
        - name: "work"
          size: "400Mi"
  suPass: "password"
  suPassHash: "b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86"
dirs:
  config: "/enonic-xp/home/config"
  extraConfig: "/enonic-xp/home/extra-config"
discoveryService: "cluster-discovery"
files:
  setEnv: "/enonic-xp/home/setenv.sh"
  vhosts: "com.enonic.xp.web.vhost.cfg"
finalizers:
  app:
    uninstall: "uninstall.app.enonic.cloud"
image:
  nameTemplate: "enonic/xp:%s-ubuntu"
  pullPolicy: "IfNotPresent"
labelKeys:
  data: "enonic.data"
  deployment: "enonic.deployment"
  ingressVhostLoaded: "enonic.cloud/vhost-loaded"
  managed: "enonic.managed"
  master: "enonic.master"
  nodeGroup: "enonic.nodeGroup"
ownerReferences:
- apiVersion: "enonic.cloud/v1"
  kind: "Xp7Deployment"
  blockOwnerDeletion: false
  controller: true
  name: "mycloud-mysolution-myenv-myservice"
pods:
  nodeGroupAntiAffinity: false
  securityContext:
    fsGroup: "0"
    user: "1337"
  sysctlInitContainer: true
  terminationGracePeriodSeconds: "600"
  updateStrategy: "RollingUpdate"
resources:
  cpu:
    defaultRequests: null
  memory:
    defaultRequests: null
settings:
  cloudApiServiceAccount:
    name: "cloudApi"
    namespace: "ec-system"
  hzApiDiscovery: true
  linkerd: false
storage:
  default:
    storageClassName: "standard"
  shared:
    storageClassName: "standard"
volumes:
  mounts:
    blobstore: "/enonic-xp/home/repo/blob"
    deploy: "/enonic-xp/home/deploy"
    export: "/enonic-xp/home/data"
    index: "/enonic-xp/home/repo/index"
    snapshots: "/enonic-xp/home/snapshots"
    work: "/enonic-xp/home/work"
